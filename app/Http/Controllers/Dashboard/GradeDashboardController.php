<?php

namespace App\Http\Controllers\Dashboard;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Http\Controllers\AdministratorController;
use Illuminate\Support\Carbon;

class GradeDashboardController extends AdministratorController
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('dashboard.grade.index');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        // Department collection where status is active
        $departments = $this->department->where('status', 1)->get();

        return view('dashboard.grade.create')
            ->withDepartments($departments);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        // Get the academic year only to construct grade unique code
        $academicDate = Carbon::parse($request['schoolyear_start']);
        $academicYear = $academicDate->year;

        $department = $this->department->findOrFail($request['department_id']);

        $request['code'] = $academicYear . $department->code . $request['name'];

        $this->validate($request, [
            'code' => 'required|unique:grades',
            'name' => 'required|unique:grades,name,NULL,NULL,schoolyear_start,'. $academicYear,
            'schoolyear_start' => 'required',
            'schoolyear_end' => 'required',
            'department_id' => 'required'
        ],
        [
            'name.unique' => 'The grade in this department is already exist.',
            'code.unique' => 'The autogenerated code is not unique, the grade is already created and have the same academic year. Try create with the difference name.'
        ]);
        
        $input = $request->all();
        
        $this->grade->create($input);
        
        return redirect()->back()->with('success', 'New Grade has been created!');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }

    /**
     * Populate all grade data to datatables
     *
     * @return Collection
     */
    public function getGradeData()
    {
        $grades = $this->grade
            ->leftJoin('departments', 'grades.department_id', '=', 'departments.id')
            ->select(['grades.code as code', 'grades.name as name' ,'grades.status as status', 'grades.schoolyear_start as schoolyear_start', 'grades.schoolyear_end as schoolyear_end', 'departments.name as dname', 'departments.code as dcode','grades.id as id']);
        
        return datatables()->of($grades)
            ->editColumn('name', '<a href="#">{{$name}}</a>')
            ->editColumn('status', '
            @if($status == 1)
                <i class="text-success fa fa-check"></i> Active
            @else
                <i class="text-danger fa fa-times"></i> In Active
            @endif
            ')
            ->addColumn('academic_year', '<span title="{{ $schoolyear_start }}/{{ $schoolyear_end }}">{{ Carbon\Carbon::parse($schoolyear_start)->year }}/{{ Carbon\Carbon::parse($schoolyear_end)->year }}</span>')
            ->editColumn('dname', '{{$dname}} ({{$dcode}})')
            ->rawColumns(['name', 'status', 'academic_year'])
            ->removeColumn('id')
            ->make();
    }
}
